<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>ai.turintech.model-catalog</groupId>
		<artifactId>model-catalog-parent</artifactId>
		<version>1.0.0-a0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<artifactId>model-catalog-rest</artifactId>
	<name>model-catalog-rest</name>
	<description>Rest API module for the model-catalog microservice</description>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing-bridge-brave</artifactId>
		</dependency>

		<dependency>
			<groupId>io.zipkin.reporter2</groupId>
			<artifactId>zipkin-reporter-brave</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>io.sentry</groupId>
			<artifactId>sentry-spring-boot-starter-jakarta</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.graphql</groupId>
			<artifactId>spring-graphql-test</artifactId>
			<scope>test</scope>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webflux-api -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webflux-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api -->
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!--Graphql-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-graphql</artifactId>
		</dependency>
		<dependency>
			<groupId>com.introproventures</groupId>
			<artifactId>graphql-jpa-query-boot-starter</artifactId>
		</dependency>
<!--
		todo remove versions from here
-->
		<dependency>
			<groupId>com.introproventures</groupId>
			<artifactId>graphql-jpa-query</artifactId>
			<version>1.2.3</version>
			<type>pom</type>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.introproventures/graphql-jpa-query-web -->
		<dependency>
			<groupId>com.introproventures</groupId>
			<artifactId>graphql-jpa-query-web</artifactId>
			<version>1.2.3</version>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>com.introproventures</groupId>-->
<!--			<artifactId>graphql-jpa-query-schema</artifactId>-->
<!--			<version>1.2.3</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>com.introproventures</groupId>-->
<!--			<artifactId>graphql-jpa-query-autoconfigure</artifactId>-->
<!--			<version>1.2.3</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter</artifactId>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-configuration-processor</artifactId>-->
<!--			<optional>true</optional>-->
<!--		</dependency>-->

		<!--		<dependency>-->
<!--			<groupId>org.springframework.graphql</groupId>-->
<!--			<artifactId>spring-graphql-test</artifactId>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.springframework.graphql</groupId>-->
<!--			<artifactId>spring-graphql</artifactId>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>com.graphql-java-kickstart</groupId>-->
<!--			<artifactId>graphql-spring-boot-starter</artifactId>-->
<!--			<version>11.1.0</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>com.graphql-java-kickstart</groupId>-->
<!--			<artifactId>graphql-java-tools</artifactId>-->
<!--			<version>11.1.0</version>-->
<!--			<scope>test</scope>-->
<!--		</dependency>-->


		<!-- java components -->
		<dependency>
			<groupId>ai.turintech.components</groupId>
			<artifactId>architecture-rest</artifactId>
		</dependency>

		<!-- Project's module dependencies -->
		<dependency>
			<groupId>ai.turintech.model-catalog</groupId>
			<artifactId>model-catalog-to</artifactId>
		</dependency>
		<dependency>
			<groupId>ai.turintech.model-catalog</groupId>
			<artifactId>model-catalog-facade</artifactId>
		</dependency>
		<dependency>
			<groupId>ai.turintech.model-catalog</groupId>
			<artifactId>model-catalog-to-dto-mapper</artifactId>
		</dependency>
	</dependencies>


	<build>
		<defaultGoal>spring-boot:run</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
<!--			todo Configure these 2 plugins in the POM file of the module containing your tests.-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<!-- Plugin that provides API-first development using openapi-generator-cli 
					to generate Spring-MVC endpoint stubs at compile time from an OpenAPI definition 
					file -->
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<finalName>${project.artifactId}</finalName>
						<mainClass>${start-class}</mainClass>
						<!-- Enable the line below to have remote debugging of your application
							on port 5005 <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments> -->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<annotationProcessorPaths>
							<path>
								<groupId>org.springframework.boot</groupId>
								<artifactId>spring-boot-configuration-processor</artifactId>
								<version>${spring-boot.version}</version>
							</path>
							<path>
								<groupId>org.mapstruct</groupId>
								<artifactId>mapstruct-processor</artifactId>
								<version>${org.mapstruct.version}</version>
							</path>
							<path>
								<groupId>org.glassfish.jaxb</groupId>
								<artifactId>jaxb-runtime</artifactId>
								<version>${jaxb-runtime.version}</version>
							</path>
						</annotationProcessorPaths>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
					<configuration>
						<!-- Due to spring-boot repackage, without adding this property test
							classes are not found See https://github.com/spring-projects/spring-boot/issues/6254 -->
						<!-- Force alphabetical order to have a reproducible build -->
						<!-- Fix tests at java 13+ https://github.com/reactor/BlockHound/issues/33 -->
						<classesDirectory>${project.build.outputDirectory}</classesDirectory>
						<runOrder>alphabetical</runOrder>
						<includes>
							<include>**/*IT*</include>
							<include>**/*IntTest*</include>
						</includes>
						<argLine>@{argLine} -XX:+AllowRedefinitionToAddDeleteMethods
							-Dspring.profiles.active=${profile.test}</argLine>
					</configuration>
					<executions>
						<execution>
							<id>integration-test</id>
							<goals>
								<goal>integration-test</goal>
							</goals>
						</execution>
						<execution>
							<id>verify</id>
							<goals>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<source>${maven.compiler.source}</source>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<!-- Force alphabetical order to have a reproducible build -->
						<!-- Fix tests at java 13+ https://github.com/reactor/BlockHound/issues/33 -->
						<runOrder>alphabetical</runOrder>
						<excludes>
							<exclude>**/*IT*</exclude>
							<exclude>**/*IntTest*</exclude>
						</excludes>
						<argLine>@{argLine} -XX:+AllowRedefinitionToAddDeleteMethods</argLine>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>${properties-maven-plugin.version}</version>
					<executions>
						<execution>
							<phase>initialize</phase>
							<goals>
								<goal>read-project-properties</goal>
							</goals>
							<configuration>
								<files>
									<file>sonar-project.properties</file>
								</files>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<!-- Plugin that provides API-first development using openapi-generator-cli 
						to generate Spring-MVC endpoint stubs at compile time from an OpenAPI definition 
						file -->
					<groupId>org.openapitools</groupId>
					<artifactId>openapi-generator-maven-plugin</artifactId>
					<version>${openapi-generator-maven-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<inputSpec>${project.basedir}/src/main/resources/swagger/api.yml</inputSpec>
								<generatorName>spring</generatorName>
								<apiPackage>ai.turintech.modelcatalog.rest</apiPackage>
								<modelPackage>ai.turintech.modelcatalog.to</modelPackage>
								<supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
								<skipValidateSpec>false</skipValidateSpec>
								<configOptions>
									<reactive>true</reactive>
									<delegatePattern>true</delegatePattern>
									<title>model-catalog</title>
									<useSpringBoot3>true</useSpringBoot3>
								</configOptions>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>

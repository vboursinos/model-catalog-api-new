
Table model {
  id integer [pk]
  model_type_id integer [ref: > model_type.id]
  ml_task_id integer [ref: > ml_task.id]
  name varchar [not null, unique]
  display_name varchar [not null]
  description varchar
  structure varchar
  advantages array
  disadvantages array
}

Table ml_task {  
  id integer [pk]
  name varchar [not null, unique]
}

Table model_dependency {
  id integer [pk]
  model_id integer [ref: > model.id]
  name varchar [not null]
}

Table model_group {
  model_id integer [ref: > model.id]
  group_id integer [ref: > group.id]
}

Table group {
  id integer [pk]
  name varchar [not null]
}

Table model_metadata {
  model_id integer [pk, ref: - model.id]
  decision_tree varchar
  ensemble_type varchar
  family varchar
}

Table model_type {
  id integer [pk] 
  name varchar [not null]
}

Table incompatible_metric {
  model_id integer [ref: > model.id]
  metric_id integer [ref: > metric.id]

  indexes {
    (model_id, metric_id) [pk]
  }
}

Table metric {
  id integer [pk]
  name varchar [not null, unique]

  Note: "TBD: This entity seems to be outside the boundaries of this microservice"
}

Table parameter {
  id integer [pk]
  model_id integer [ref: > model.id]
  name varchar [not null]
  label varchar [not null]
  description varchar
  enabled boolean [not null]
  fixed_value boolean [not null]
  ordering integer [not null]

  indexes {
    (model_id, name) [unique]
  }
}

Table parameter_type {
  id integer [pk] 
  name varchar [not null, unique]
}

Table parameter_type_definition {
  id integer [pk]
  parameter_id integer [ref: > parameter.id, not null]
  parameter_type_id integer [ref: > parameter_type.id, not null]
  parameter_distribution_type_id integer [ref: > parameter_distribution_type.id, not null]
  ordering integer [not null]
}

Table categorical_parameter {
  parameter_type_definition_id integer [pk, ref: - parameter_type_definition.id]
  default_value varchar
}

Table categorical_parameter_value {
  id integer [pk]
  parameter_type_definition_id integer [ref: > categorical_parameter.parameter_type_definition_id, not null]
  value varchar [not null]
}

Table integer_parameter {
  parameter_type_definition_id integer [pk, ref: - parameter_type_definition.id]
  default_value integer
}

Table integer_parameter_range {
  id integer [pk]
  parameter_type_definition_id integer [ref: > integer_parameter.parameter_type_definition_id, not null]
  start integer [not null]
  stop integer [not null]
}

Table float_parameter {
  parameter_type_definition_id integer [pk, ref: - parameter_type_definition.id]
  default_value double
}

Table float_parameter_range {
  id integer [pk]
  parameter_type_definition_id integer [ref: > float_parameter.parameter_type_definition_id, not null]
  left boolean [not null]
  right boolean [not null]
  lower double [not null]
  upper double [not null]
}


Table boolean_parameter {
  parameter_type_definition_id integer [pk, ref: - parameter_type_definition.id]
  default_value boolean
}


Table parameter_distribution_type {
  id integer [pk]
  name varchar [not null, unique]
}


Table constraint_edge {
  id integer [pk]
  model_id integer [ref: > model.id]
  source_id integer [ref: - parameter.id]
  target_id integer [ref: - parameter.id]
  description varchar
}

Table mapping {
  id integer [pk]
  constraint_edge_id integer [ref: > constraint_edge.id]
  source_type varchar
  target_type varchar
}

Table categorical_constraint {
  id integer [pk]
  source_mapping_id integer [ref: - mapping.id]
  target_mapping_id integer [ref: - mapping.id]
}

Table float_constraint {
  id integer [pk]
  source_mapping_id integer [ref: - mapping.id]
  target_mapping_id integer [ref: - mapping.id]
}

Table integer_constraint {
  id integer [pk]
  source_mapping_id integer [ref: - mapping.id]
  target_mapping_id integer [ref: - mapping.id]
}

Table category_constraint{
  id integer [pk]
  categorical_constraint_id integer [ref: > categorical_constraint.id]
  string_value varchar
  boolean_value boolean
}

Table interval_constraint {
  id integer [pk]
  float_constraint_id integer [ref: > float_constraint.id]
  left boolean
  right boolean
  lower double
  upper double
}

Table range_constraint {
  id integer [pk]
  integer_constraint_id integer [ref: > integer_constraint.id]
  start integer
  stop integer
}
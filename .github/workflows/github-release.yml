# NEW GITHUB RELEASE
# ---------------------------------------------
# This Github action is responsible to create automatically new Github releases.
# References: https://docs.github.com/en/repositories/releasing-projects-on-github/about-releases
#
# When: On every pushed git tag
# External Dependencies: turintech/turintech-actions
# Concurrency: Ensures that only a single job or workflow using the same concurrency
# group will run at a time. A concurrency group can be any string or expression

name: New Github Release

on:
  push:
    tags:
      - "*"

env:
  REPOSITORY_NAME: ${{ github.repository }}
  TAG_NAME: ${{ github.ref_name }}

jobs:
  create-github-release:
    name: Create Github Release
    runs-on: ci-build
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Checkout remote composite actions
        id: github_app
        uses: ./.github/workflows/composite-actions
        with:
          ACTION_APP_ID: ${{ secrets.ACTION_APP_ID }}
          ACTION_APP_KEY: ${{ secrets.ACTION_APP_KEY }}

      - name: Update submodule
        uses: ./.github/actions/version-control/submodule-update
        with:
          REPOSITORY_NAME: ${{ env.REPOSITORY_NAME }}
          GITHUB_TOKEN: ${{ steps.github_app.outputs.GITHUB_APP_TOKEN }}
          BRANCH: ${{ env.TAG_NAME }}
          MONOREPO_UPDATE_SWITCH: false # switch to create/update submodule on the staging monorepo
          REPOSITORY_DISPATCH: true # switch to enable/disable the build of staging image

      - name: Creating a new GitHub release
        # When a new github release is created manually, a new tag event will arrive.
        # By setting it to "true", it will try to create the
        # release again with a "release already exist error".
        continue-on-error: true
        uses: ./.github/actions/version-control/github-release
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ env.TAG_NAME }}
          RELEASE_NAME: ${{ env.TAG_NAME }}
          REPOSITORY_NAME: ${{ env.REPOSITORY_NAME }}
          # Indicates whether to create or update automatically
          # the changelog file at the default branch.
          GENERATE_CHANGELOG: false
